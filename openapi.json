{
  "openapi": "3.1.0",
  "info": {
    "title": "MonSuperBusiness E-Commerce API",
    "version": "1.0.0",
    "description": "The MonSuperBusiness E-Commerce API provides programmatic access to manage users, products, orders, and payments for the MonSuperBusiness online store. This API allows clients to integrate shopping functionalities into their own applications, handle orders, manage customer data, and process payments.",
    "termsOfService": "https://monsuperbusiness.com/terms/",
    "contact": {
      "name": "MonSuperBusiness API Support",
      "url": "https://monsuperbusiness.com/support",
      "email": "support@monsuperbusiness.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to managing users"
    },
    {
      "name": "Products",
      "description": "Operations related to products in the store"
    },
    {
      "name": "Orders",
      "description": "Operations for creating and managing customer orders"
    },
    {
      "name": "Payments",
      "description": "Operations for processing payments and handling transactions"
    }
  ],
  "servers": [
    {
      "url": "https://sandbox.monsuperbusiness.com/api/v1",
      "description": "Sandbox environment for testing"
    },
    {
      "url": "https://api.monsuperbusiness.com/v1",
      "description": "Production environment"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the user",
            "example": "usr_abc123"
          },
          "name": {
            "type": "string",
            "description": "Full name of the user",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user",
            "example": "john.doe@example.com"
          },
          "role": {
            "type": "string",
            "description": "Role of the user (e.g., admin, customer)",
            "example": "customer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user account was created",
            "example": "2023-09-25T12:34:56Z"
          }
        },
        "required": ["id", "name", "email", "role"]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the product",
            "example": "prod_001"
          },
          "name": {
            "type": "string",
            "description": "Name of the product",
            "example": "MonSuperWidget"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product",
            "example": "A high-quality widget for all your widgeting needs."
          },
          "price": {
            "type": "number",
            "description": "Price of the product in USD",
            "example": 19.99
          },
          "stock": {
            "type": "integer",
            "description": "Number of items in stock",
            "example": 150
          },
          "category": {
            "type": "string",
            "description": "Product category",
            "example": "gadgets"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the product was added",
            "example": "2023-09-21T08:45:30Z"
          }
        },
        "required": ["id", "name", "price", "stock"]
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the order",
            "example": "ord_456xyz"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who placed the order",
            "example": "usr_abc123"
          },
          "productIds": {
            "type": "array",
            "description": "List of product IDs included in the order",
            "items": {
              "type": "string",
              "example": "prod_001"
            }
          },
          "totalAmount": {
            "type": "number",
            "description": "Total amount of the order in USD",
            "example": 39.98
          },
          "status": {
            "type": "string",
            "description": "Current status of the order (e.g., pending, shipped, delivered)",
            "example": "pending"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the order was created",
            "example": "2023-09-25T13:00:00Z"
          }
        },
        "required": ["id", "userId", "productIds", "totalAmount", "status"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the payment",
            "example": "pay_789ghi"
          },
          "orderId": {
            "type": "string",
            "description": "ID of the order associated with this payment",
            "example": "ord_456xyz"
          },
          "amount": {
            "type": "number",
            "description": "Amount paid in USD",
            "example": 39.98
          },
          "status": {
            "type": "string",
            "description": "Current status of the payment (e.g., completed, failed)",
            "example": "completed"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment method used (e.g., credit card, PayPal)",
            "example": "credit_card"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the payment was processed",
            "example": "2023-09-25T13:10:00Z"
          }
        },
        "required": ["id", "orderId", "amount", "status", "paymentMethod"]
      }
    },
    "securitySchemes": {
      "cloud-apim-bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "cloud-apim-bearer",
        "name": "Cloud APIM Bearer",
        "description": "A token provided with Cloud APIM API keys that looks like `otoapk_xxxxxxxx_xxxxxxxxxxxxx`.",
       
        "in": "header"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "An API key to authenticate requests.",
         "example": "demo_1234567890abcdef"
      }
    }
  },
  "security": [
    {
      "cloud-apim-bearer": [],
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Retrieve a list of all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "cloud-apim-bearer": [],
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Retrieve a list of all products",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Add a new product to the store",
        "operationId": "addProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Retrieve a list of all orders",
        "operationId": "getOrders",
        "responses": {
          "200": {
            "description": "A list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Place a new order",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order placed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/payments": {
      "post": {
        "tags": ["Payments"],
        "summary": "Process a payment for an order",
        "operationId": "processPayment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payment information"
          }
        }
      }
    }
  }
}
